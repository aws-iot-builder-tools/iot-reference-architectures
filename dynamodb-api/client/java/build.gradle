plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'idea'

    // Shadow JAR support
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

def gradleDependencyVersion = '6.7'

wrapper {
    gradleVersion = gradleDependencyVersion
    distributionType = Wrapper.DistributionType.ALL
}

application {
    mainClassName = 'com.awslabs.iot.client.applications.DynamoDbApiClientConsole'
}

def daggerVersion = '2.30.1'
def jcommanderVersion = '1.80'
def awsSdk2Version = '2.15.61'
def gsonVersion = '2.8.6'
def slf4jVersion = '1.7.30'
def vertxVersion = '4.0.0'
def jcabiLogVersion = '0.19.0'
def jlineVersion = '3.18.0'
def junitVersion = '4.13.1'
def resultsIteratorForAwsJavaSdkVersion = '0.10.68'
def awsIotCoreWebsocketsVersion = '0.6.3'
def vavrVersion = '0.10.3'
def jSerialCommVersion = '2.6.2'
def immutablesValueVersion = '2.8.9-ea-1'
def jbbpVersion = '2.0.3'

distZip.enabled = shadowDistZip.enabled = false
distTar.enabled = shadowDistTar.enabled = false

group = 'com.awslabs.iot.client.applications.DynamoDbApiClient'
version = '1.0-SNAPSHOT'

description = """"""

shadowJar {
    // Create a shadow JAR with all of the necessary dependencies
    archiveFileName = 'aws-iot-client.jar'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Immutables (requires annotation processing for code generation)
    annotationProcessor "org.immutables:value:$immutablesValueVersion"
    annotationProcessor "org.immutables:gson:$immutablesValueVersion"
    implementation "org.immutables:value:$immutablesValueVersion"
    implementation "org.immutables:gson:$immutablesValueVersion"

    // Dagger code generation
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // Dependency injection with Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.beust:jcommander:$jcommanderVersion"

    implementation "software.amazon.awssdk:iot:$awsSdk2Version"
    implementation "software.amazon.awssdk:iotdataplane:$awsSdk2Version"

    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "org.jline:jline:$jlineVersion"
    implementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
    implementation "com.jcabi:jcabi-log:$jcabiLogVersion"
    implementation "com.github.awslabs:results-iterator-for-aws-java-sdk:$resultsIteratorForAwsJavaSdkVersion"
    implementation "com.github.awslabs:aws-iot-core-websockets:$awsIotCoreWebsocketsVersion"
    implementation "io.vavr:vavr:$vavrVersion"

    implementation "com.fazecast:jSerialComm:$jSerialCommVersion"

    implementation "com.igormaznitsa:jbbp:$jbbpVersion"

    testImplementation "junit:junit:$junitVersion"
}

task depsize {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
                .each {
                    out << "${it.name}".padRight(45)
                    out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
                }
        println(out)
    }
}