plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'idea'

    // Creates fat JAR
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

def gradleDependencyVersion = '6.7'

wrapper {
    gradleVersion = gradleDependencyVersion
    distributionType = Wrapper.DistributionType.ALL
}

distZip.enabled = shadowDistZip.enabled = false
distTar.enabled = shadowDistTar.enabled = false

repositories {
    jcenter()

    mavenCentral()

    maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }
}

application {
    // Required for shadow JAR but not used
    mainClassName = 'not-applicable'
}

// Specify all of our dependency versions
def slf4jVersion = '1.7.30'
def gsonVersion = '2.8.6'
def awsSdk2Version = '2.15.74'
def junitVersion = '4.13.1'
def awsLambdaJavaCoreVersion = '1.2.1'
def vavrVersion = '0.10.3'
def vavrGsonVersion = '0.10.2'
def commonsCodecVersion = '1.15'
def resultsIteratorForAwsJavaSdkVersion = '11.0.0'
def xrayVersion = '2.7.1'

group = 'com.awssamples.iot.dynamodb.Api'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "com.amazonaws:aws-lambda-java-core:$awsLambdaJavaCoreVersion"

    implementation "software.amazon.awssdk:sqs:$awsSdk2Version"
    implementation "software.amazon.awssdk:dynamodb:$awsSdk2Version"
    implementation "software.amazon.awssdk:iotdataplane:$awsSdk2Version"
    implementation "software.amazon.awssdk:iot:$awsSdk2Version"

    // For converting payloads to hex strings
    implementation "commons-codec:commons-codec:$commonsCodecVersion"

    // For profiling Lambda functions
//    implementation "com.amazonaws:aws-xray-recorder-sdk-aws-sdk-v2-instrumentor:$xrayVersion"

    implementation "org.slf4j:slf4j-log4j12:$slf4jVersion"

    implementation "io.vavr:vavr:$vavrVersion"
    implementation "io.vavr:vavr-gson:$vavrGsonVersion"

    implementation "com.github.awslabs:results-iterator-for-aws-java-sdk:$resultsIteratorForAwsJavaSdkVersion"

    testCompile "junit:junit:$junitVersion"
}

task depsize {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
                .each {
                    out << "${it.name}".padRight(45)
                    out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
                }
        println(out)
    }
}
