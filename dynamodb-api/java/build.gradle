plugins {
    // Creates fat JAR
    id 'com.github.johnrengelman.shadow' version '5.1.0'

    // Downloads binary dependencies
    id 'de.undercouch.download' version '3.4.3'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

distZip.enabled = shadowDistZip.enabled = false
distTar.enabled = shadowDistTar.enabled = false

repositories {
    jcenter()

    mavenCentral()

    maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }
}

application {
    // Required for shadow JAR but not used
    mainClassName = 'not-applicable'
}

def gradleDependencyVersion = '5.5'

wrapper {
    gradleVersion = gradleDependencyVersion
}

// Specify all of our dependency versions
def slf4jVersion = '1.7.26'
def gsonVersion = '2.8.5'
def awsSdk2Version = '2.6.5'
def junitVersion = '4.12'
def systemRulesVersion = '1.19.0'
def mockitoVersion = '3.0.0'
def hamcrestVersion = '2.1'
def guavaVersion = '27.0-jre'
def awsLambdaJavaCoreVersion = '1.2.0'

group = 'com.awssamples.iot.dynamodb.Api'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compile "com.google.code.gson:gson:$gsonVersion"

    compile "com.amazonaws:aws-lambda-java-core:$awsLambdaJavaCoreVersion"

    compile "software.amazon.awssdk:sqs:$awsSdk2Version"
    compile "software.amazon.awssdk:dynamodb:$awsSdk2Version"
    compile "software.amazon.awssdk:iotdataplane:$awsSdk2Version"

    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "com.github.stefanbirkner:system-rules:$systemRulesVersion"
    testCompile "org.hamcrest:hamcrest-core:$hamcrestVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.google.guava:guava:$guavaVersion"
}
